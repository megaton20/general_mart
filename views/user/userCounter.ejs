



  <%- include('./partials/navbar') %>
  <div class="page-header">
    <div class=" text-center ">
        <h5 class="text-uppercase">items on show glass</h5>
    </div>
</div>


<%- include('../partials/messages') %>
        
        <section id="service-details" class="service-details section">
          <div class="container">
        <div class="row">
          <div class="col-lg-4 fixed-col"  >

            <div class="service-box mb-4">
              <div class="services-list">
                <%- include('../partials/categoryBtn') %>
                
              </div>
            </div>
            

          </div>
          <div class="col-lg-8 ml-0" id="product-section">
            <div class="service-box scrolling-col">

          
              <% if (showcaseItem.length === 0) { %>
                <div class="no-items text-center">
                  <p>No items available</p>
                </div>
                <% } else { %>
                  <div class="store-grid">
                    <% const visibleShowcaseItems = showcaseItem.filter(data => userData.is_exclusive || !data.is_exclusive); %> <!-- Filter visible showcase items -->

                    <% if (visibleShowcaseItems.length > 0) { %>
                      <% visibleShowcaseItems.forEach(data => { %>
                        <div class="product-item my-box-shadow">
                          <div class="discount-badge">
                            <% if (data.percentage && data.percentage < 0) { %> <!-- Ensure valid percentage -->
                              <%= Math.abs(data.percentage).toFixed(2) %>% off
                            <% } else { %>
                              0%
                            <% } %>
                          </div>
                    
                          <% if (data.is_exclusive) { %> <!-- Show VIP badge for exclusive items -->
                            <img src="/images/vip-batch.png" alt="VIP Item" class="vip-icon">
                          <% } %>
                    
                          <div class="card-image">
                            <a href="/user/product-details/<%= data.id %>">
                              <img src="/uploads/<%= data.image %>" class="img-fluid" alt="<%= data.ProductName %>">
                            </a>
                          </div>
                    
                          <div class="wishlist">
                            <% if (data.inWishlist) { %> <!-- Show 'Remove from wishlist' if already in wishlist -->
                              <a href="/user/wishlist/<%= data.id %>/remove" class="wishlist-icon m-1">
                                <i class="fas fa-heart"></i>
                              </a>
                            <% } else { %> <!-- Show 'Add to wishlist' if not in wishlist -->
                              <a href="/user/wishlist/<%= data.id %>/add" class="wishlist-icon m-1">
                                <i class="far fa-heart"></i>
                              </a>
                            <% } %>
                          </div>
                    
                          <div class="product-details">
                            <p class="text-truncate"><%= data.ProductName %></p>
                          </div>
                    
                          <div class="item-prices">
                            <p>₦ <span class="item-price"><%= data.UnitPrice %></span>
                              <% if (data.old_price) { %> <!-- Show old price if available -->
                                <span class="old-price text-grey item-price ml-3">₦ <%= data.old_price %></span>
                              <% } %>
                            </p>
                          </div>
                    
                          <div class="mt-2 button-container">
                            <button style="width:100%" class="my-btn add-to-cart m-0 p-1" 
                              data-id="<%= data.id %>" 
                              data-name="<%= data.ProductName %>" 
                              data-price="<%= data.UnitPrice %>" 
                              data-max="<%= data.total_on_shelf %>" 
                              data-image="<%= data.image %>" 
                              onclick="handleButtonClick(this)">Add to cart</button>
                          </div>
                        </div>
                      <% }); %>
                    <% } else { %>
                      <div class="no-items-message">
                        <p>No products are currently available for you to view. upgrade to see exclusive items</p><!-- Fallback message for no visible items -->
                      </div>
                    <% } %>
                    
                <% } %>
              </div>
          

              <nav class=" mt-4">
                <ul class="pagination">
                  <% if (pagination.page > 1) { %>
                    <a href="/user/pagination?page=<%= pagination.page - 1 %>#product-section" class="my-btn">&laquo;</a>
                  <% } %>
                  <% if (pagination.page < pagination.totalPages) { %>
                    <a href="/user/pagination?page=<%= pagination.page + 1 %>#product-section" class="my-btn ml-1">&raquo;</a>
                  <% } %>
                </ul>
              </nav>
            </div>
          </div>
          
      </div>
      </div>
    </section><!-- /Service Details Section -->
    
  <br>
  <br>
  <div class="container">
    <div class="d-flex justify-content-center">
      <%- include('../partials/tagBtn') %>
    </div>
   </div>
   
  <br>
  <%- include('../partials/recentlyViewed') %>
  <br>




<script>

let formattedPrices = document.querySelectorAll('.item-price');
    formattedPrices.forEach(priceElement => {
      let price = parseFloat(priceElement.textContent.replace(/[^0-9.-]+/g, "")); // Remove any non-numeric characters
      priceElement.textContent = price.toLocaleString("en-US", { minimumFractionDigits: 2, maximumFractionDigits: 2 });
    });


  let cart = [];

  const presentCart = <%- JSON.stringify(presentCart) %>;
  let offset = 10;
    const limit = 0; // Number of items to fetch each time
    let moreItemsAvailable = true;
  
  // initailize cart on log in
  function initializeCart(presentCart) {
    presentCart.forEach(item => {
      cart.push({
        id: item.product_id,
        name: item.product_name,
        price: item.price_per_item,
        max: item.max,
        image: item.image,
        quantity: item.quantity
      });
      updateItemButton(item.product_id, item.product_name, item.total_on_shelf, item.unit_price, item.image);
    });
    updateCartBadge();
  }

    // Initialize cart with data from the server-side template
  initializeCart(presentCart);


  function updateCartBadge() {
    const cartBadges = document.querySelectorAll('#cart-badge');
    cartBadges.forEach(cartBadge => {
      cartBadge.textContent = cart.length;
    });
  }
  

  function updateItemQuantityNumber(item) {
    const itemButtonGroup = document.querySelector(`.btn-group[data-id='${item.id}']`);
    if (itemButtonGroup) {
      const quantityButton = itemButtonGroup.querySelector('.btn-secondary');
      if (quantityButton) {
        quantityButton.textContent = item.quantity;
      }
    }
  }
  

  function updateItemButton(itemId, itemName, itemMax, itemPrice, itemImage) {
    const itemButton = document.querySelector(`.add-to-cart[data-id='${itemId}']`);
    const cartItem = cart.find(cartItem => cartItem.id === itemId);
  
    if (cartItem) {
      if (itemButton) {
        itemButton.outerHTML = `
          <div style="width:100%; height:30px "  class="m-0 btn-group p-0 my-box-shadow border-1" role="group" data-id="${itemId}">
            <button class="btn p-0" style="border:1px solid #333; color:var(--accent-color)" onclick="removeFromCart(${itemId})">-</button>
            <button class="btn btn-secondary p-1" disabled style="background-color:var(--accent-color)" ">${cartItem.quantity}</button>
            <button class="btn p-0" style="border:1px solid #333; color:var(--accent-color)" onclick="increaseQuantity(${itemId})">+</button>
          </div>
        `;
      }
    } else {
      const parentDiv = document.querySelector(`.btn-group[data-id='${itemId}']`);
      if (parentDiv) {
        parentDiv.outerHTML = `
      <button style="width:100%" class="my-btn add-to-cart m-0 p-1" data-id="${itemId}" data-name="${itemName}" data-price="${itemPrice}" data-max="${itemMax}" data-image="${itemImage}" onclick="handleButtonClick(this)">Add to cart</button> 
        `;
      }
    }
  }
  
  function addToCart(item) {
    let existingItem = cart.find(cartItem => cartItem.id === item.id);
  
    if (existingItem) {
      if (existingItem.quantity < item.max) {
        existingItem.quantity++;
      } else {
        alert(`You can only add up to ${item.max} of this item.`);
        return;
      }
    } else {
      item.quantity = 1;
      cart.push(item);
    }
  
    updateItemQuantityNumber(item);
    updateCartBadge();
    updateItemButton(item.id, item.name, item.max, item.price, item.image);
  
    // Send POST request to server to update cart in database
    $.ajax({
      type: 'POST',
      url: '/addCartItems',
      data: JSON.stringify({ cart: cart }),
      contentType: 'application/json',
      success: function(response) {
      },
      error: function(error) {
        console.error('Error updating cart:', error);
      }
    });
  }
  
  function increaseQuantity(itemId) {
    let item = cart.find(cartItem => cartItem.id === itemId);
    if (item && item.quantity < item.max) {
      console.log(item);
      item.quantity++;
      updateItemQuantityNumber(item);
      updateCartBadge();
      updateItemButton(item.id, item.name, item.max, item.price, item.image);
  
      // Update cart in the database
      $.ajax({
        type: 'POST',
        url: '/addCartItems',
        data: JSON.stringify({ cart: cart }),
        contentType: 'application/json',
        success: function(response) {
          location.reload();
        },
        error: function(error) {
          console.error('Error updating cart:', error);
        }
      });
    } else if (item) {
      alert(`You can only add up to ${item.max} of this item.`);
    }
  }

  function removeFromCart(itemId) {
    let item = cart.find(cartItem => cartItem.id === itemId);
    if (item) {
      item.quantity--;
      if (item.quantity === 0) {
        cart = cart.filter(cartItem => cartItem.id !== itemId);
      }
      updateItemQuantityNumber(item);
      updateCartBadge();
      updateItemButton(item.id, item.name, item.max, item.price, item.image);
  
      // Update cart in the database
      $.ajax({
        type: 'POST',
        url: '/addCartItems',
        data: JSON.stringify({ cart: cart }),
        contentType: 'application/json',
        success: function(response) {
          location.reload();
        },
        error: function(error) {
          console.log(error);
          console.error('Error updating cart:', error);
        }
      });
    }
  }
  
  function handleButtonClick(event) {
    const id = parseInt(event.getAttribute("data-id"), 10);
    const name = event.getAttribute("data-name");
    const image = event.getAttribute("data-image");
    const price = parseFloat(event.getAttribute("data-price"));
    const max = parseInt(event.getAttribute("data-max"), 10);
  
    const item = { id, name, price, max, image };
    addToCart(item);
  }

</script> 
  


